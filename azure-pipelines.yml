# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- none

pool:
  name: RPLocalPool
  demands:
   - agent.name -equals RPLocalMac

stages:
- stage: Build
  displayName: 'Code Build'
  jobs:
  - job: Build
    displayName: 'Build'
    pool: RPLocalPool
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m -Dmaven.test.skip=true'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'package'
- stage: Unit_Test
  displayName: 'Unit Test'
  jobs:
  - job: UnitTest
    displayName: 'Unit Testing'
    pool: RPLocalPool
    steps:
      - task : Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'test'
- stage: Code_Coverage
  displayName: 'Code Coverage'
  jobs:
  - job: Code
    displayName: 'Code Coverage'
    pool: RPLocalPool
    steps:
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/*.xml'
- stage: UploadArtifact
  displayName: 'Upload Artifacts'
  jobs:
  - job: Upload
    displayName: 'Upload JAR'
    pool: RPLocalPool
    steps:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/target/*.jar'
        artifact: 'JAR'
        publishLocation: 'pipeline'